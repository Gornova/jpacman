<?xml version="1.0" ?>
 
<!--
 
jpacman build file.
 
ant setup Initialize jpacman environment.
ant compile Run to compile the code.
ant run Run to launch jpacman
ant webstart Deploy jpacman as a webstart.
ant clean Removes products of the build process, etc.
 
Alex Schearer
-->
<project name="jpacman" default="compile">
 
    <property name="src.dir" value="src" />
    <property name="res.dir" value="data" />
    <property name="lib.dir" value="lib" />
    <property name="obj.dir" value="bin" />
	<property name="dist.dir" value="dist" />
	<property name="data.dir" value="data" />
    <property name="target.dir" value="." />
    <property name="script.dir" value="script" />
    <property name="webstart.dir" value="${target.dir}/webstart" />
	
	<property name="launch4j.dir" location="C:/Programmi/launch4j-3.0.1-win32/launch4j" />
 
    <!-- Set up the jpacman environment including preparing the natives. -->
    <target name="setup" depends="check-setup" unless="setup.exists">
        <delete dir="${lib.dir}/native" />
        <mkdir dir="${lib.dir}/native" />
        <unzip src="${lib.dir}/natives-win32.jar" dest="${lib.dir}/native" />
        <unzip src="${lib.dir}/natives-mac.jar" dest="${lib.dir}/native" />
        <unzip src="${lib.dir}/natives-linux.jar" dest="${lib.dir}/native" />
    </target>
 
    <!-- Compile and archive jpacman. -->
    <target name="jar">
        <antcall target="compile" />
        <antcall target="archive" />
    </target>
 
    <!-- Run jpacman. -->
    <target name="run" depends="setup,compile">
        <java fork="true" classname="it.marte.games.pacman.PacManGame">
            <classpath>
                <pathelement path="${obj.dir}" />
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar" />
                </fileset>
            </classpath>
            <jvmarg value="-Djava.library.path=lib/native" />
        </java>
    </target>
 
    <!-- Clean up the environment. -->
    <target name="clean">
        <delete includeEmptyDirs="true">
            <fileset dir="${obj.dir}" includes="**/*" defaultExcludes="no" />
        </delete>
        <delete file="${target.dir}/jpacman.jar" />
        <delete>
            <fileset dir="${src.dir}" includes="**/*.orig" />
        </delete>
        <delete>
            <fileset dir="." defaultExcludes="no">
                <include name="**/*.DS_Store"/>
            </fileset>
        </delete>
        <delete dir="${webstart.dir}" />
        <delete dir="${dist.dir}" />
    	<delete file="jpacman.exe"/>
    </target>
 
    <target name="format">
        <exec executable="${script.dir}/astyle">
            <arg value="-p" />
            <arg value="-r" />
            <arg value="-c" />
            <arg value="--style=java" />
            <arg value="${src.dir}/*" />
        </exec>
    </target>
 
    <!-- Create a webstart directory in order to deploy jpacman. -->
    <target name="webstart" depends="jar">
        <input message="Web server url:" addproperty="codebase" />
        <delete dir="${webstart.dir}" />
        <mkdir dir="${webstart.dir}" />
        <copy file="${script.dir}/htaccess" tofile="${webstart.dir}/.htaccess" />
        <copy file="${target.dir}/jpacman.jar" tofile="${webstart.dir}/jpacman.jar" />
        <copy file="${script.dir}/template.jnlp" tofile="${webstart.dir}/jpacman.jnlp">
            <filterchain>
                <replacetokens>
                    <token key="codebase" value="${codebase}" />
                </replacetokens>
            </filterchain>
        </copy>
        <antcall target="signjar" />
    </target>
 
    <!-- Determines whether setup has been run. -->
    <target name="check-setup">
        <condition property="setup.exists">
            <available file="${lib.dir}/native" type="dir" />
        </condition>
    </target>
 
 
    <!-- Determines whether a keystore exists. -->
    <target name="check-keystore">
        <input message="Username:" addproperty="keystore.alias" />
        <input message="Password:" addproperty="keystore.pass" />
        <condition property="keystore.exists">
            <available file="${target.dir}/${keystore.alias}.ks" type="file" />
        </condition>
    </target>
 
    <!-- Create a key store. -->
    <target name="keystore" depends="check-keystore" unless="keystore.exists">
        <input message="Full Name:" addproperty="keystore.name" />
        <input message="Company:" addproperty="keystore.company" />
 
        <genkey keystore="${target.dir}/${keystore.alias}.ks"
                alias="${keystore.alias}"
                storepass="${keystore.pass}">
            <dname>
                <param name="CN" value="${keystore.name}" />
                <param name="OU" value="${keystore.company}" />
                <param name="O" value="" />
                <param name="C" value=""/>
            </dname>
        </genkey>
    </target>
 
    <!-- Sign's webstart/jpacman.jar for deployment. -->
    <target name="signjar" depends="keystore">
        <signjar jar="${webstart.dir}/jpacman.jar"
                 keystore="${target.dir}/${keystore.alias}.ks"
                 storepass="${keystore.pass}"
                 alias="${keystore.alias}" />
    </target>
 
    <!-- Compile the code put results into obj.dir. -->
    <target name="compile">
        <mkdir dir="${obj.dir}" />
        <javac destdir="${obj.dir}" debug="on">
            <src path="${src.dir}" />
            <classpath>
                <pathelement path="${lib.dir}/slick.jar" />
                <pathelement path="${lib.dir}/lwjgl.jar" />
            </classpath>
        </javac>
        <copy todir="${obj.dir}">
            <fileset dir="${res.dir}" />
        </copy>
    </target>
 
    <!-- Jar compiled code and place result into target.dir. -->
    <target name="archive">
        <jar destfile="${target.dir}/jpacman.jar" manifest="${script.dir}/manifest.txt">
            <fileset dir="${obj.dir}" />
        </jar>
    </target>
	
	<!-- Build jpacman package for win32 -->
	<target name="distribuite-Win32" depends="clean,jar,launch4j" >
		<delete dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}/win32"/>
		<mkdir dir="${dist.dir}/win32/lib"/>
	    <copy file="jpacman.jar" tofile="${dist.dir}/win32/jpacman.jar" />
		<copy file="jpacman.exe" tofile="${dist.dir}/win32/jpacman.exe" />
		<copy file="README.txt" tofile="${dist.dir}/win32/README.txt" />
		<copy file="LICENSE" tofile="${dist.dir}/win32/LICENSE" />
		<copy file="scoretable.properties" tofile="${dist.dir}/win32/scoretable.properties" />
        <unzip src="${lib.dir}/natives-win32.jar" dest="${dist.dir}/win32" />		
		<copy todir="${dist.dir}/win32/lib">
			<fileset dir="${lib.dir}"/>
		</copy>
		<delete file="${dist.dir}/win32/lib/natives-win32.jar"/>
		<delete file="${dist.dir}/win32/lib/natives-linux.jar"/>
		<delete file="${dist.dir}/win32/lib/natives-mac.jar"/>
		<copy todir="${dist.dir}/win32/data">
			<fileset dir="${data.dir}"/>	
		</copy>
		<input message="Insert version of jpacman:" addproperty="version.number"/>
		<zip destfile="${dist.dir}/jpacman-win32-${version.number}.zip" basedir="${dist.dir}/win32/" />
		<delete dir="${dist.dir}/win32"/>
	</target>

	<!-- Build jpacman package for linux -->
	<target name="distribuite-Linux" depends="clean,jar" >
		<delete dir="${dist.dir}"/>
		<delete dir="${lib.dir}/native"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}/linux"/>
		<mkdir dir="${dist.dir}/linux/lib"/>
	    <copy file="jpacman.jar" tofile="${dist.dir}/linux/jpacman.jar" />
		<copy file="jpacman.sh" tofile="${dist.dir}/linux/jpacman.sh" />		
		<copy file="README.txt" tofile="${dist.dir}/linux/README.txt" />
		<copy file="LICENSE" tofile="${dist.dir}/linux/LICENSE" />
		<copy file="scoretable.properties" tofile="${dist.dir}/linux/scoretable.properties" />
        <unzip src="${lib.dir}/natives-linux.jar" dest="${dist.dir}/linux" />		
		<copy todir="${dist.dir}/linux/lib">
			<fileset dir="${lib.dir}"/>
		</copy>
		<delete file="${dist.dir}/linux/lib/natives-win32.jar"/>
		<delete file="${dist.dir}/linux/lib/natives-mac.jar"/>
		<delete file="${dist.dir}/linux/lib/natives-linux.jar"/>
		<copy todir="${dist.dir}/linux/data">
			<fileset dir="${data.dir}"/>	
		</copy>
		<input message="Insert version of jpacman:" addproperty="version.number"/>
		<zip destfile="${dist.dir}/jpacman-linux-${version.number}.zip" basedir="${dist.dir}/linux/" />
		<delete dir="${dist.dir}/linux"/>
	</target>
	
	<!-- Build jpacman package for mac -->
		<target name="distribuite-Mac" depends="clean,jar" >
			<delete dir="${dist.dir}"/>
			<mkdir dir="${dist.dir}"/>
			<mkdir dir="${dist.dir}/mac"/>
			<mkdir dir="${dist.dir}/mac/lib"/>
		    <copy file="jpacman.jar" tofile="${dist.dir}/mac/jpacman.jar" />
			<copy file="README.txt" tofile="${dist.dir}/mac/README.txt" />
			<copy file="LICENSE" tofile="${dist.dir}/mac/LICENSE" />
			<copy file="scoretable.properties" tofile="${dist.dir}/mac/scoretable.properties" />
			<delete dir="${lib.dir}/native"/>
			<mkdir dir="${lib.dir}/native"/>
	        <unzip src="${lib.dir}/natives-mac.jar" dest="${lib.dir}/native" />		
			<copy todir="${dist.dir}/mac/lib">
				<fileset dir="${lib.dir}"/>
			</copy>
			<delete file="${dist.dir}/linux/lib/natives-win32.jar"/>
			<delete file="${dist.dir}/linux/lib/natives-mac.jar"/>
			<delete file="${dist.dir}/linux/lib/natives-linux.jar"/>
			<copy todir="${dist.dir}/mac/data">
				<fileset dir="${data.dir}"/>	
			</copy>
			<input message="Insert version of jpacman:" addproperty="version.number"/>
			<zip destfile="${dist.dir}/jpacman-mac-${version.number}.zip" basedir="${dist.dir}/mac/" />
			<delete dir="${dist.dir}/mac"/>
		</target>	
	
	<!-- Create win32 executable using launch4j (http://launch4j.sourceforge.net/) --> 
	<target name="launch4j">
		<taskdef name="launch4j"
		    classname="net.sf.launch4j.ant.Launch4jTask"
		    classpath="${launch4j.dir}/launch4j.jar
		        :${launch4j.dir}/lib/xstream.jar" />
		<launch4j configFile="./l4j/jpacman.xml" />
	</target>
	
 
</project>